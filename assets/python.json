[
    {   
        "0": "What is output for −a = ['he', 'she', 'we']' '.join(a)",
        "1": "In the following options which are python libraries which are used for data analysis and scientific computations",
        "2": "What is output for − max(''please help '')",
        "3": "How to create a frame in Python?",
        "4": "Select the correct option to draw a rectangle centred at 50,50 with width and height as 50, 70 respectively.",
        "5": "How you can lift the pen of in turtle?",
        "6": "Which of the following is a keyword in Python?",
        "7": "Find the coding block that gives an error?",
        "8": "What is the error shown on naming a variable without following the rules?",
        "9": "Which of the following give the correct way to test if the word “False” is an identifier?",
        "10": "Which of the following naming is the correct way to distinguish a private variable ‘password’ in a class?",
        "11" : "Which module is imported to check if a word is a keyword?",
        "12": "In the following code, the lines that can give an error are? [Name_1=’a’ , mail@1=’abc@mail’ ,pass=54321]",
        "13": "Which of the following gives the output as False?",
        "14": "Which of the following  is an invalid identifier?",
        "15": "Which of the following is not a namespace in Python?",
        "16": "How many types of namespaces and scopes exist in Python respectively?",
        "17": "Which of the following is not true about built-in scoped variables?",
        "18": "name=”PythonGeeks” \n print(id(name)) ",
        "19": "How many namespaces can exist at a time?",
        "20" : "Which of the following is the biggest scope?"
    },
    {
        "0": {
            "a": "['heshewe']",
            "b": "heshewe",
            "c": "['he she we']",
            "d": "'he she we'"
        },
        "1": {
            "a": "Numpy",
            "b": "Scipy",
            "c": "Pandas",
            "d": "All the above"
        },
        "2": {
            "a": "a blank space character",
            "b": "s",
            "c": "e",
            "d": "q"
        },
        "3": {
            "a": "Frame = new.window()",
            "b": "Frame = frame.new()",
            "c": "Frame = Frame()",
            "d": "Frame = window.new()"
        },
        "4": {
            "a": "Canvas.create_rect(50,50,50,70)",
            "b": "Canvas.create_rect(50,70,50,50)",
            "c": "Canvas.create_rectangle(50,50,50,70)",
            "d": "Tkinter.create_rect(50,50,50,70)"
        },
        "5": {
            "a": "Turtle.lift()",
            "b": "Turtle.liftup()",
            "c": "Turtle.penup()",
            "d": "Turtle.up()"
        },
        "6": {
            "a": "class",
            "b": "yield",
            "c": "elseif",
            "d": "None"
        },
        "7": {
            "a": "NUm2=43",
            "b": "num-2=43",
            "c": "num1=43",
            "d": "None"
        },
        "8": {
            "a": "NameError",
            "b": "RuntimeError",
            "c": "SyntaxError",
            "d": "None of the above"
        },
        "9": {
            "a": "‘False’.isidentifier()",
            "b": "keyword.iskeyword(‘False’)",
            "c": "False.isidentifier()",
            "d": "keyword.iskeyword(False)"
        },
        "10": {
            "a": "_password_",
            "b": "__password",
            "c": "password_",
            "d": "None"
        },
        "11": {
            "a": "Import keyword",
            "b": "import Keywords",
            "c": "import keyword",
            "d": "Import Keywords"
        },
        "12": {
            "a": "Line",
            "b": "Line 1 and 2",
            "c": "Line 2 and 3",
            "d": "All the lines"
        },
        "13": {
            "a": "First.isidentifier()",
            "b": "keyword.iskeyword('in')",
            "c": "'class'.isidentifier()",
            "d": "'school.'.isidentifier()"
        },
        "14": {
            "a": "nameofstd=’abc’",
            "b": "Name of std=’abc’",
            "c": "name_of_std=’abc’",
            "d": "NameOfStd=’abc’"
        },
        "15": {
            "a": "Built-in",
            "b": "Global",
            "c": "Non local",
            "d": "Local"
        },
        "16": {
            "a": "3 and 5",
            "b": "3 and 4",
            "c": "4 and 4",
            "d": "4 and 3"
        },
        "17": {
            "a": "They are available throughout the program",
            "b": "They get loaded when they are called",
            "c": "They need not be imported",
            "d": "None of the above"
        },
        "18": {
            "a": "name",
            "b": "'name'",
            "c": "“PythonGeeks’",
            "d": "2717597645616"
        },
        "19": {
            "a": "3",
            "b": "1",
            "c": "Any number of name spaces",
            "d": "2"
        },
        "20": {
            "a": "Global",
            "b": "Built-in",
            "c": "Local",
            "d": "Enclosed"
        }
    },
    {
        "0":"heshewe",
        "1": "All the above",
        "2": "s",
        "3": "Frame = Frame()",
        "4": "Canvas.create_rectangle(50,50,50,70)",
        "5": "Turtle.penup()",
        "6": "yield",
        "7": "num-2=43",
        "8": "SyntaxError",
        "9": "keyword.iskeyword(‘False’)",
        "10": "__password",
        "11": "import keyword",
        "12": "Line 2 and 3",
        "13": "'school.'.isidentifier()",
        "14": "Name of std=’abc’",
        "15": "Non local",
        "16": "3 and 4",
        "17": "They get loaded when they are called",
        "18": "2717597645616",
        "19": "Any number of name spaces",
        "20": "Built-in"
    }
]